services:
  # 프론트엔드 서비스
  ta-go-frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
    container_name: ta-go-frontend
    ports:
      - "3011:3011"
    environment:
      - NODE_ENV=production
      - PORT=3011
      - NEXT_PUBLIC_API_URL=http://ta-go.shop/graphql
      - NEXT_PUBLIC_API_GRAPHQL_URL=http://ta-go.shop/graphql
      - NEXT_PUBLIC_API_WS=ws://ta-go.shop
    restart: unless-stopped
    # 리소스 제한 설정 - 청크 인코딩 오류 방지
    deploy:
      resources:
        limits:
          memory: 2G  # 1G → 2G로 증가
          cpus: '1.0'  # 0.5 → 1.0으로 증가
        reservations:
          memory: 1G  # 512M → 1G로 증가
          cpus: '0.5'  # 0.25 → 0.5로 증가
    # 헬스체크 설정
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3011/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ta-go-network

  # 백엔드 서비스 (외부 서버 사용) - 로컬에서는 불필요하므로 비활성화
  # ta-go-backend:
  #   image: nginx:alpine
  #   container_name: ta-go-backend
  #   ports:
  #     - "3000:80"
  #   environment:
  #     - NODE_ENV=production
  #   restart: unless-stopped
  #   # 리소스 제한 설정
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 256M
  #         cpus: '0.25'
  #       reservations:
  #         memory: 128M
  #         cpus: '0.1'
  #   # 헬스체크 설정
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s
  #   networks:
  #     - ta-go-network

  # Nginx 리버스 프록시
  nginx:
    image: nginx:alpine
    container_name: ta-go-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - ta-go-frontend
      # - ta-go-backend  # 백엔드 의존성 제거
    restart: unless-stopped
    # 리소스 제한 설정 - 청크 인코딩 오류 방지
    deploy:
      resources:
        limits:
          memory: 512M  # 256M → 512M로 증가
          cpus: '0.5'  # 0.25 → 0.5로 증가
        reservations:
          memory: 256M  # 128M → 256M로 증가
          cpus: '0.25'  # 0.1 → 0.25로 증가
    # 헬스체크 설정
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ta-go-network

networks:
  ta-go-network:
    driver: bridge
