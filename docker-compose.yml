services:
  # 프론트엔드 서비스
  ta-go-frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ta-go-frontend
    restart: unless-stopped
    ports:
      - "3011:80"  # 프론트엔드 포트
    environment:
      - NEXT_PUBLIC_API_URL=http://72.60.40.57:3000/graphql
      - NEXT_PUBLIC_API_WS=ws://72.60.40.57:3000/graphql
    networks:
      - ta-go-network

  # MongoDB
  ta-ja-mongodb:
    image: mongo:6.0
    container_name: ta-ja-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongodb_data:/data/db
    networks:
      - ta-go-network

  # PostgreSQL
  ta-ja-postgres:
    image: postgres:15-alpine
    container_name: ta-ja-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=ta_ja_user
      - POSTGRES_PASSWORD=ta_ja_password
      - POSTGRES_DB=ta_ja_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ta-go-network

  # Redis
  ta-ja-redis:
    image: redis:7-alpine
    container_name: ta-ja-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ta-go-network

  # Nginx 리버스 프록시
  nginx:
    image: nginx:alpine
    container_name: ta-go-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - ta-go-frontend
    networks:
      - ta-go-network

volumes:
  mongodb_data:
  postgres_data:
  redis_data:

networks:
  ta-go-network:
    driver: bridge
