name: Deploy to VPS (Full Stack)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    name: Deploy Backend
    
    steps:
    - name: Checkout Backend Repository
      uses: actions/checkout@v3
      with:
        repository: sherzod992/-GO  # 백엔드 저장소
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Backend Dependencies
      run: npm ci
    
    - name: Build Backend
      run: npm run build
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        # 기타 백엔드 환경 변수들
    
    - name: Deploy Backend to VPS
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          cd /var/www/ta-ja
          git pull origin main
          npm ci
          npm run build
          pm2 restart ta-ja-backend
          echo "✅ 백엔드 배포 완료!"

  deploy-frontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend
    needs: deploy-backend  # 백엔드 배포 완료 후 실행
    
    steps:
    - name: Checkout Frontend Repository
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Frontend Dependencies
      run: npm ci
    
    - name: Build Frontend
      run: npm run build
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        NEXT_PUBLIC_API_GRAPHQL_URL: ${{ secrets.NEXT_PUBLIC_API_GRAPHQL_URL }}
        NEXT_PUBLIC_API_WS: ${{ secrets.NEXT_PUBLIC_API_WS }}
    
    - name: Deploy Frontend to VPS
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          cd /var/www/ta-go
          git pull origin main
          npm ci
          npm run build
          pm2 restart ta-go
          echo "✅ 프론트엔드 배포 완료!"

  health-check:
    runs-on: ubuntu-latest
    name: Health Check
    needs: [deploy-backend, deploy-frontend]
    
    steps:
    - name: Check Backend Health
      run: |
        sleep 30  # 서버 시작 대기
        curl -f http://${{ secrets.VPS_HOST }}:3000/health || exit 1
        echo "✅ 백엔드 헬스체크 통과"
    
    - name: Check Frontend Health
      run: |
        sleep 10  # 추가 대기
        curl -f http://${{ secrets.VPS_HOST }} || exit 1
        echo "✅ 프론트엔드 헬스체크 통과"
    
    - name: Notify Success
      run: |
        echo "🎉 전체 스택 배포 완료!"
        echo "🌐 프론트엔드: http://${{ secrets.VPS_HOST }}"
        echo "🔧 백엔드 API: http://${{ secrets.VPS_HOST }}:3000"
